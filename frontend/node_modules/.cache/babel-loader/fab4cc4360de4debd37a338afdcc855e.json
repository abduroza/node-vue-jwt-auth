{"remainingRequest":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/src/components/signUp/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/src/components/signUp/Login.vue","mtime":1549577230680},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1549443804466},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1549443812532}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*eslint-disable*/\nimport axios from \"axios\";\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      login: {\n        email: null,\n        password: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  methods: {\n    validateEmail: function validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    },\n    loginValidate: function loginValidate() {\n      this.login.errors = [];\n\n      if (!this.login.email) {\n        this.login.errors.push(\"Email required.\");\n      } else if (!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\");\n      }\n\n      if (!this.login.password) this.login.errors.push(\"Password required.\");\n\n      if (!(this.login.errors && this.login.errors.length)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    loginHandler: function loginHandler() {\n      var _this = this;\n\n      var valid = this.loginValidate();\n      var loginUserData = {\n        email: this.login.email,\n        password: this.login.password\n      };\n\n      if (valid) {\n        axios.post(\"/api/login\", loginUserData).then(function (res) {\n          console.log(res.data); // Post a status message\n\n          if (res.data.status == true) {\n            // now send the user to the next route\n            _this.$router.push({\n              name: \"Dashboard\"\n            });\n          } else {\n            _this.login.status = res.data.message;\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,MAAA,EAAA;AAJA;AADA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,EAAA;AAEA,IAAA,aAFA,yBAEA,KAFA,EAEA;AACA,aAAA,6BAAA,IAAA,CAAA,KAAA,CAAA;AACA,KAJA;AAMA,IAAA,aANA,2BAMA;AAEA,WAAA,KAAA,CAAA,MAAA,GAAA,EAAA;;AAEA,UAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,iBAAA;AACA,OAFA,MAEA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,KAAA,CAAA,KAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,4CAAA;AACA;;AACA,UAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,KAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,oBAAA;;AAEA,UAAA,EAAA,KAAA,KAAA,CAAA,MAAA,IAAA,KAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA;AACA;AAEA,KAvBA;AAyBA,IAAA,YAzBA,0BAyBA;AAAA;;AAEA,UAAA,KAAA,GAAA,KAAA,aAAA,EAAA;AAEA,UAAA,aAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,KAAA,CAAA,KADA;AAEA,QAAA,QAAA,EAAA,KAAA,KAAA,CAAA;AAFA,OAAA;;AAKA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,YAAA,EAAA,aAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,EADA,CAEA;;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA;AADA,aAAA;AAGA,WALA,MAKA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA,SAXA;AAYA;AACA;AAhDA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"login-register\">\n    <div class=\"loginErrors\">\n      <div v-for=\"(err, i) in login.errors\" :key=\"i\">\n        {{ err }}\n      </div>\n      {{login.status}}\n    </div>\n    <div class=\"login\">\n      <span>Login: </span>\n      <input v-model=\"login.email\" type=\"text\" placeholder=\"Email\">\n      <input v-model=\"login.password\" type=\"password\" placeholder=\"Password\">\n      <button v-on:click=\"loginHandler\">Submit</button>\n    </div>\n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from \"axios\";\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      login: {\n        email: null,\n        password: null,\n        errors: [],\n        status: null\n      },\n    };\n  },\n  methods:{\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    loginValidate() {\n      \n      this.login.errors = []\n\n      if(!this.login.email) {\n        this.login.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\")\n      }\n      if(!this.login.password) this.login.errors.push(\"Password required.\")\n\n      if(!(this.login.errors && this.login.errors.length)){\n        return true;\n      } else{\n        return false;\n      }\n      \n    },\n\n    loginHandler() {\n\n      let valid = this.loginValidate();\n\n      const loginUserData = {\n        email: this.login.email,\n        password: this.login.password,\n      }\n\n      if(valid) {\n        axios.post(\"/api/login\", loginUserData).then(res => {\n          console.log(res.data)\n          // Post a status message\n          if (res.data.status == true) {\n            // now send the user to the next route\n            this.$router.push({\n              name: \"Dashboard\"\n            });\n          } else {\n            this.login.status = res.data.message;\n          }\n        });\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/signUp"}]}