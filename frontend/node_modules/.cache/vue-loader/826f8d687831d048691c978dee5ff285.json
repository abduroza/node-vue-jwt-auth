{"remainingRequest":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/src/components/signUp/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/src/components/signUp/Login.vue","mtime":1549577230680},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1549443804466},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1549443809249},{"path":"/home/danijel/Documents/Workspace/tournamentRegisterApp/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1549443812532}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*eslint-disable*/\nimport axios from \"axios\";\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      login: {\n        email: null,\n        password: null,\n        errors: [],\n        status: null\n      },\n    };\n  },\n  methods:{\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    loginValidate() {\n      \n      this.login.errors = []\n\n      if(!this.login.email) {\n        this.login.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\")\n      }\n      if(!this.login.password) this.login.errors.push(\"Password required.\")\n\n      if(!(this.login.errors && this.login.errors.length)){\n        return true;\n      } else{\n        return false;\n      }\n      \n    },\n\n    loginHandler() {\n\n      let valid = this.loginValidate();\n\n      const loginUserData = {\n        email: this.login.email,\n        password: this.login.password,\n      }\n\n      if(valid) {\n        axios.post(\"/api/login\", loginUserData).then(res => {\n          console.log(res.data)\n          // Post a status message\n          if (res.data.status == true) {\n            // now send the user to the next route\n            this.$router.push({\n              name: \"Dashboard\"\n            });\n          } else {\n            this.login.status = res.data.message;\n          }\n        });\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/signUp","sourcesContent":["<template>\n  <div class=\"login-register\">\n    <div class=\"loginErrors\">\n      <div v-for=\"(err, i) in login.errors\" :key=\"i\">\n        {{ err }}\n      </div>\n      {{login.status}}\n    </div>\n    <div class=\"login\">\n      <span>Login: </span>\n      <input v-model=\"login.email\" type=\"text\" placeholder=\"Email\">\n      <input v-model=\"login.password\" type=\"password\" placeholder=\"Password\">\n      <button v-on:click=\"loginHandler\">Submit</button>\n    </div>\n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from \"axios\";\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      login: {\n        email: null,\n        password: null,\n        errors: [],\n        status: null\n      },\n    };\n  },\n  methods:{\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    loginValidate() {\n      \n      this.login.errors = []\n\n      if(!this.login.email) {\n        this.login.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\")\n      }\n      if(!this.login.password) this.login.errors.push(\"Password required.\")\n\n      if(!(this.login.errors && this.login.errors.length)){\n        return true;\n      } else{\n        return false;\n      }\n      \n    },\n\n    loginHandler() {\n\n      let valid = this.loginValidate();\n\n      const loginUserData = {\n        email: this.login.email,\n        password: this.login.password,\n      }\n\n      if(valid) {\n        axios.post(\"/api/login\", loginUserData).then(res => {\n          console.log(res.data)\n          // Post a status message\n          if (res.data.status == true) {\n            // now send the user to the next route\n            this.$router.push({\n              name: \"Dashboard\"\n            });\n          } else {\n            this.login.status = res.data.message;\n          }\n        });\n      }\n    }\n  }\n}\n</script>\n"]}]}